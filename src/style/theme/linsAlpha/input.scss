
@mixin outlined {
    --input-outlined-color: var(--active-color, var(--primary-color));
    outline: 1px solid var(--input-outlined-color);
    background-color: transparent;

    &:focus {
        outline-width: 2px;
        box-shadow: 0 0 4px 2px color-mix(in oklab, var(--input-outlined-color) 50%, oklab(0 0 0 / 0.3));
    }

    &:has(input:checked) {
        background-color: oklab(from var(--input-outlined-color) l a b / 0.2);
    }

    &:user-invalid, &:has(input[type=radio]:user-invalid) {
        outline: 1px solid var(--error-color, red);
    }
}

@mixin inputRangeOutlined {
    @include outlined;
    outline: none;
    border: none;

}

@mixin outlinedWithSelectors {
    input:not([type=radio]):not([type=checkbox]):not([type=range]), textarea, select, .input {
        @include outlined;
    }

    input[type=range] {
        @include inputRangeOutlined
    }

    :has(> label):has(> input[type=radio]) {
        @include outlined;
    }
}

@mixin formFieldOutlined {
    --input-outlined-color: var(--active-color, var(--primary-color));
    label, legend {
        color: var(--input-outlined-color);
    }

    &:has(:user-invalid) {
        color: var(--error-color, red);
        label, legend {
            color: var(--error-color, red);
        }
    }

    @include outlinedWithSelectors
}

@mixin filled {
    --input-filled-focus-color: var(--active-color, var(--primary-color));
    --input-filled-color: color-mix(in oklab, var(--surface-color) 60%, black);
    background-color: var(--input-filled-color);
    outline: 1px solid color-mix(in oklab, var(--surface-color) 60%, white);
    box-shadow: none;

    &:focus {
        outline: 1px solid var(--input-filled-focus-color);
        box-shadow: 0 0 4px 2px color-mix(in oklab, var(--input-outlined-color) 50%, oklab(0 0 0 / 0.3));
    }

    &:has(input:checked) {
        background-color: oklab(from var(--input-filled-color) l a b / 0.5);
    }

    &:user-invalid, &:has(input[type=radio]:user-invalid) {
        outline: 1px solid var(--error-color, red)
    }
}

@mixin inputRangeFilled {
    @include filled;
    outline: none;
    border: none;
    cursor: pointer;
}

@mixin filledWithSelectors {
    input:not([type=radio]):not([type=checkbox]):not([type=range]), textarea, select, .input {
        @include filled;
    }

    input[type=range] {
        @include inputRangeFilled;
    }

    :has(> label):has(> input[type=radio]) {
        @include filled;
    }
}

@mixin formFieldFilled {
    label, legend {
        color: inherit;
    }

    @include filledWithSelectors;

    &:has(:user-invalid) {
        color: inherit;
        label, legend {
            color: inherit;
        }
    }
}

@layer base {
    fieldset {
        border: none;
        outline: none;
        padding: 0;
    }

    textarea {
        box-sizing: content-box;
        height: 3lh;
        resize: block;
    }

    input, textarea, select, .input, .formField *:has(> label):has(> input[type=radio]) {
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        background-clip: padding-box;
        border-radius: 0.25rem;
        border: none;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        cursor: text;

        &::placeholder {
            opacity: 0.8;
        }
    }

    input[type=color] {
        padding: 0.125rem 0.25rem;
    }

    select,
    ::picker(select) {
        appearance: base-select;
    }

    select {
        align-items: center;
        & > button {
            padding: 0;
        }
    }

    label, legend {
        display: inline-flex;
        gap: 0.5rem;
    }

    .formField:has([required]:not([type=radio])) {
        label::after {
            content: "*";
            color: var(--primary-color)
        }
    }

    .formField:has([required]):has([type=radio]) {
        legend::after {
            content: "*";
            color: var(--primary-color)
        }
    }

    *:has(> label):has(> input[type=radio]) {
        position: relative;

        label::before {
            content: '';
            position: absolute;
            inset: 0;
        }
    }
}


@layer elements {
    .formField.outlined {
        @include formFieldOutlined;
    }

    .formField.filled {
        @include formFieldFilled;
    }


    form.filled {
        .formField {
            @include formFieldFilled;
        }

        input:not([type=radio]):not([type=checkbox]), textarea, select, .input {
            @include filled;
        }
    }

    input:not([type=radio]):not([type=range]), textarea, select, .input {
        &.outlined {
            @include outlined;
        }

        &.filled {
            @include filled;
        }
    }

    input[type=range] {
        &.outlined {
            @include inputRangeOutlined;
        }

        &.filled {
            @include inputRangeFilled;
        }
    }
}